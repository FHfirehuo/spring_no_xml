<?xml version="1.0" encoding="UTF-8"?>
<!-- scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<configuration scan="true" scanPeriod="60 seconds">
	<!-- 每个logger都关联到logger上下文，默认上下文名称为default。但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。 -->
	<!-- <contextName>myAppName</contextName> -->


	<!-- Setting the resetJUL property of LevelChangePropagator will reset all 
		previous level configurations of all j.u.l. loggers. However, previously 
		installed handlers will be left untouched. -->
	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
		<resetJUL>true</resetJUL>
	</contextListener>

	<jmxConfigurator />  <!--http://logback.qos.ch/manual/jmxConfig.html -->


	<!-- 其中appender的配置表示打印到控制台(稍后详细讲解appender )； <root level="INFO">将root的打印级别设置为“INFO”，指定了名字为“STDOUT”的appender。 
		当执行logback.LogbackDemo类的main方法时，root将级别为“INFO”及大于“INFO”的日志信息交给已经配置好的名为“STDOUT”的appender处理，“STDOUT”appender将信息打印到控制台； -->
	<appender name="ERROR_FILE" class="ch.qos.logback.core.ConsoleAppender">

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>DENY</onMatch>
			<onMismatch>NEUTRAL</onMismatch>
		</filter>

		<file>logs/error_%d{yyyy-MM-dd}.log</file>
		<append>false</append>
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<encoder>
			<!-- <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern> -->
			<pattern>logback: %d{HH:mm:ss.SSS} %logger{36} - %msg%n</pattern>
		</encoder>

	</appender>
	
	<appender name="INFO_FILE" class="ch.qos.logback.core.ConsoleAppender">

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">  
            <level>INFO</level>  
        </filter> 

		<file>logs/info_%d{yyyy-MM-dd}.log</file>
		<append>false</append>
		<!-- encoder 默认配置为PatternLayoutEncoder -->
		<encoder>
			<!-- <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern> -->
			<pattern>logback: %d{HH:mm:ss.SSS} %logger{36} - %msg%n</pattern>
		</encoder>

	</appender>

	<!-- 将org.springframework.web包下的日志级别设置为 DEBUG，我们开发 springMVC经常出现和参数类型相关的4XX错误，设置此项我们会看到更详细的错误信息 -->
	<logger name="org.springframework.web" level="DEBUG"></logger>

	<!-- 打印级别，越往后越大 trace，debug， info， warn，error， -->
	<root level="INFO">
		<!-- <appender-ref ref="consloe" /> -->
		<appender-ref ref="INFO_FILE" />
	</root>
	
	<root level="ERROR">
		<!-- <appender-ref ref="consloe" /> -->
		<appender-ref ref="ERROR_FILE" />
	</root>


</configuration>